{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2022-04-29T12:27:33.665Z",
    "end": "2022-04-29T12:28:51.718Z",
    "duration": 78053,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2075119d-ebda-408b-9368-9e2cb29cc9a0",
      "title": "",
      "fullFile": "cypress/integration/firstTest.spec.js",
      "file": "cypress/integration/firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9502b9dd-4eef-4248-b27e-444ab64d5d4e",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify correct request and response",
              "fullTitle": "Test with backend Verify correct request and response",
              "timedOut": null,
              "duration": 18672,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.log(\"LOGGED IN\");\n// To intercept the calls, we need to create a Cypress server\n// cy.server();\ncy.intercept(\"POST\", \"**/api.realworld.io/api/articles\").as(\"postArticles\"); // cy.intercept(\"POST\", \"**/articles\").as(\"postArticles\");\ncy.contains(\"New Article\").click();\nconst articleTitle = \"This is the title of this article\";\nconst articleDescription = \"This is the description\";\nconst articleText = \"Article text\"; // Fill in the inputs\ncy.get(\"input[placeholder='Article Title']\").type(articleTitle);\ncy.get('input[placeholder=\"What\\'s this article about?\"]').type(articleDescription);\ncy.get('textarea[placeholder=\"Write your article (in markdown)\"]').type(articleText);\ncy.contains(\"button\", \"Publish Article\").click(); // wait for the request to complete and handle the returned value\ncy.wait(\"@postArticles\");\ncy.get(\"@postArticles\").then(xhr => {\n  console.log(xhr); // assert that the request title is the one we typed\n  // and that the response description is the one we typed\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.title).to.equal(articleTitle);\n  expect(xhr.response.body.article.title).to.equal(articleTitle);\n});\ndeleteArticleByTitle(articleTitle);",
              "err": {},
              "uuid": "d3b86088-b006-4d2c-a95a-f61f561e2fb2",
              "parentUUID": "9502b9dd-4eef-4248-b27e-444ab64d5d4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercept and modify request and response",
              "fullTitle": "Test with backend Intercept and modify request and response",
              "timedOut": null,
              "duration": 16893,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Modify Request\n// cy.intercept(\"POST\", \"**/api.realworld.io/api/articles\", (req) => {\n//   req.body.article.description = \"This is a description 2\";\n// }).as(\"postArticles\");\n// Modify Response\ncy.intercept(\"POST\", \"**/api.realworld.io/api/articles\", req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal(\"This is the description\");\n    res.body.article.description = \"This is the description 2\";\n  });\n}).as(\"postArticles\");\ncy.contains(\"New Article\").click();\nconst articleTitle = \"This is the title of this article\";\nconst articleDescription = \"This is the description\";\nconst articleText = \"Article text\"; // Fill in the inputs\ncy.get(\"input[placeholder='Article Title']\").type(articleTitle);\ncy.get('input[placeholder=\"What\\'s this article about?\"]').type(articleDescription);\ncy.get('textarea[placeholder=\"Write your article (in markdown)\"]').type(articleText);\ncy.contains(\"button\", \"Publish Article\").click(); // wait for the request to complete and handle the returned value\ncy.wait(\"@postArticles\");\ncy.get(\"@postArticles\").then(xhr => {\n  console.log(xhr); // assert that the request title is the one we typed\n  // and that the response description is the one we typed\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.title).to.equal(articleTitle);\n  expect(xhr.response.body.article.title).to.equal(articleTitle);\n});\ndeleteArticleByTitle(articleTitle);",
              "err": {
                "message": "TypeError: res.body.article is undefined",
                "estack": "TypeError: res.body.article is undefined\n./cypress/integration/firstTest.spec.js/</</</<@http://localhost:4200/__cypress/tests?p=cypress/integration/firstTest.spec.js:164:9\n../driver/src/cy/net-stubbing/events/response.ts/onResponse/<@http://localhost:4200/__cypress/runner/cypress_runner.js:172390:12\ntryCatcher@http://localhost:4200/__cypress/runner/cypress_runner.js:13022:23\n../../node_modules/bluebird/js/release/method.js/module.exports/Promise.try@http://localhost:4200/__cypress/runner/cypress_runner.js:10296:29\nonResponse@http://localhost:4200/__cypress/runner/cypress_runner.js:172389:58\n../driver/src/cy/net-stubbing/events/index.ts/registerEvents/</<@http://localhost:4200/__cypress/runner/cypress_runner.js:172161:28\ntryCatcher@http://localhost:4200/__cypress/runner/cypress_runner.js:13022:23\n../../node_modules/bluebird/js/release/method.js/module.exports/Promise.try@http://localhost:4200/__cypress/runner/cypress_runner.js:10296:29\n../driver/src/cy/net-stubbing/events/index.ts/registerEvents/<@http://localhost:4200/__cypress/runner/cypress_runner.js:172115:53\n../driver/node_modules/eventemitter2/lib/eventemitter2.js/</EventEmitter.prototype.emit@http://localhost:4200/__cypress/runner/cypress_runner.js:111143:19\n../driver/src/cypress/events.ts/extend/events.proxyTo/parent[fn]@http://localhost:4200/__cypress/runner/cypress_runner.js:181743:31\n../runner-shared/src/event-manager.js/addGlobalListeners/</<@http://localhost:4200/__cypress/runner/cypress_runner.js:199453:17\n../../node_modules/component-emitter/index.js/Emitter.prototype.emit@http://localhost:4200/__cypress/runner/cypress_runner.js:18455:20\nemit@http://localhost:4200/__cypress/runner/cypress_runner.js:207471:15\nemitEvent@http://localhost:4200/__cypress/runner/cypress_runner.js:207220:20\nonevent@http://localhost:4200/__cypress/runner/cypress_runner.js:207207:18\nonpacket@http://localhost:4200/__cypress/runner/cypress_runner.js:207171:22\n../../node_modules/component-emitter/index.js/Emitter.prototype.emit@http://localhost:4200/__cypress/runner/cypress_runner.js:18455:20\nemitReserved@http://localhost:4200/__cypress/runner/cypress_runner.js:207484:15\nondecoded@http://localhost:4200/__cypress/runner/cypress_runner.js:206763:14\n../../node_modules/component-emitter/index.js/Emitter.prototype.emit@http://localhost:4200/__cypress/runner/cypress_runner.js:18455:20\nadd@http://localhost:4200/__cypress/runner/cypress_runner.js:207797:23\nondata@http://localhost:4200/__cypress/runner/cypress_runner.js:206755:22\n../../node_modules/component-emitter/index.js/Emitter.prototype.emit@http://localhost:4200/__cypress/runner/cypress_runner.js:18455:20\nonPacket@http://localhost:4200/__cypress/runner/cypress_runner.js:204686:16\n../socket/node_modules/engine.io-client/lib/socket.js/setTransport/<@http://localhost:4200/__cypress/runner/cypress_runner.js:204495:14\n../../node_modules/component-emitter/index.js/Emitter.prototype.emit@http://localhost:4200/__cypress/runner/cypress_runner.js:18455:20\nonPacket@http://localhost:4200/__cypress/runner/cypress_runner.js:205084:10\nonData@http://localhost:4200/__cypress/runner/cypress_runner.js:205077:10\n../socket/node_modules/engine.io-client/lib/transports/websocket.js/</addEventListeners/this.ws.onmessage@http://localhost:4200/__cypress/runner/cypress_runner.js:206050:36\n",
                "diff": null
              },
              "uuid": "9b6e4229-e8ce-48d1-9012-7e01948886d2",
              "parentUUID": "9502b9dd-4eef-4248-b27e-444ab64d5d4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercept get request with custom response",
              "fullTitle": "Test with backend Intercept get request with custom response",
              "timedOut": null,
              "duration": 4795,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.wait(\"@getTags\");\ncy.get(\".tag-list\").should(\"contain\", \"cypress\").and(\"contain\", \"automation\").and(\"contain\", \"testing\");",
              "err": {},
              "uuid": "0c247578-02ee-416a-b203-f65b8f640a89",
              "parentUUID": "9502b9dd-4eef-4248-b27e-444ab64d5d4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify global feed likes count",
              "fullTitle": "Test with backend Verify global feed likes count",
              "timedOut": null,
              "duration": 11161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(\"GET\", \"**/articles/feed\", {\n  articles: [],\n  articlesCount: 0\n});\ncy.intercept(\"GET\", \"**/articles*\", {\n  fixture: \"articles.json\"\n});\ncy.wait(2000);\ncy.contains(\"Global Feed\").click();\ncy.get(\"app-article-list button\").then(likeButtons => {\n  expect(likeButtons[0]).to.contain(15);\n  expect(likeButtons[1]).to.contain(2);\n});\ncy.fixture(\"articles\").then(file => {\n  const articleLink = file.articles[1].slug;\n  cy.intercept(\"POST\", `**/articles/${articleLink}/favourite`, file.articles[1]);\n});\ncy.get(\"app-article-list button\").eq(1).click().should(\"contain\", 3);",
              "err": {},
              "uuid": "4a1b0d43-4359-4a08-837c-3617cc11a49e",
              "parentUUID": "9502b9dd-4eef-4248-b27e-444ab64d5d4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3b86088-b006-4d2c-a95a-f61f561e2fb2",
            "0c247578-02ee-416a-b203-f65b8f640a89",
            "4a1b0d43-4359-4a08-837c-3617cc11a49e"
          ],
          "failures": [
            "9b6e4229-e8ce-48d1-9012-7e01948886d2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 51521,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}